"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug :: BEGIN
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

" Ctrlp
Plug 'ctrlpvim/ctrlp.vim'

" Fugitive.vim
Plug 'tpope/vim-fugitive'

" NERD tree
Plug 'scrooloose/nerdtree'

" Surround.vim
Plug 'tpope/vim-surround'

" Tagbar
Plug 'majutsushi/tagbar'

" Vim-airline
Plug 'vim-airline/vim-airline'

" Youcompleteme
" Plug 'valloric/youcompleteme'

call plug#end()


" >>>> Configs for Plugin >>>>>>>>>>>>>>>>>>>>>>>>
" >>>>>>>> Ctrlp Configs >>>>>>>>
let g:ctrlp_show_hidden = 1
" <<<<<<<< Ctrlp Configs <<<<<<<<

" >>>>>>>> vim-airline Configs >>>>>>>>
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.crypt = '🔒'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = 'Ɇ'
let g:airline_symbols.whitespace = 'Ξ'

" powerline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.dirty='⚡'
" <<<<<<<< vim-airline Configs <<<<<<<<
" <<<< Configs for Plugin <<<<<<<<<<<<<<<<<<<<<<<<<<

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug :: END
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""




"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key Mapping :: BEGIN
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F1> folding
"map <F1> v]}zf
map <F1> :tabnew<cr>
" <F2> change window
map <F2> <C-w><C-w>
" <F3> NERDTree
map <F3> :NERDTreeToggle<cr>
" <F4> Tlist
"map <F4> :Tlist<cr>
map <F4> :TagbarToggle<cr>
" <F5> [i  show definition
map <F5> [i
" <F6> gd  goto declaration
map <F6> gd
" <F7> shell
map <F7> :VimShell<cr>
" <F8> Dox
map <F8> :Dox<cr>
" bnext, bprev
map <F11> :bp<cr>
map <F12> :bn<cr>
" tabn
map <S-Tab> gt<cr>

" Copy&Paste Ctrl+c Ctrl+x Ctrl+v
vmap <C-c> "+yi
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <C-r><C-o>+
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key Mapping :: END
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""




"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim options :: BEGIN
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if &term =~ '256color'
  " disable Background Color Erase (BCE) so that color schemes
  " render properly when inside 256-color tmux and GNU screen.
  " see also http://snk.tuxfamily.org/log/vim-256color-bce.html
  set t_ut=
endif

syntax on
filetype on

set nocompatible
"set visualbell

set encoding=utf-8
set fileencodings=utf-8,cp949,default,latin1
set termencoding=utf-8

set number
"set list
set ruler

"set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
"set smarttab

"set cindent
set autoindent
"set smartindent

set showmatch
set backspace=indent,eol,start
set backspace=2

set paste
set history=500
set hlsearch

set wrapscan
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim options :: END
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""




"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Development :: BEGIN
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" >>>>>>>> ctags Configs >>>>>>>>
set tags=./tags,../tags,../../tags,../../../tags,../../../../tags
" <<<<<<<< ctags Configs <<<<<<<<

" >>>>>>>> cscope Configs >>>>>>>>
set csprg=/usr/bin/cscope
set csto=0
set cst
set nocsverb

if filereadable("./cscope.out")
cs add cscope.out
else
cs add /usr/src/linux/cscope.out
endif
set csverb
" <<<<<<<< cscope Configs <<<<<<<<
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Development :: END
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

